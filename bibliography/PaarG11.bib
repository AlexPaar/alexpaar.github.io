% This file was created with JabRef 2.8.1.
% Encoding: UTF8

@INPROCEEDINGS{PaarG11,
  author = {Alexander Paar and Stefan Gruner},
  title = {Static typing with value space-based subtyping},
  booktitle = {{SAICSIT} '11: Proceedings of the South African Institute of Computer
	Scientists and Information Technologists Conference on Knowledge,
	Innovation and Leadership in a Diverse, Multidisciplinary Environment},
  year = {2011},
  series = {{SAICSIT} '11},
  pages = {177-186},
  address = {New York, NY, USA},
  month = {10},
  publisher = {ACM},
  abstract = {Numerous programming and schema languages contain the notion of value
	types. However, support for value space-based subtyping is spotty.
	This paper presents a formal type system for atomic value types as
	an extension of the simply typed lambda calculus with subtyping.
	In the \lc-calculus, value types can be derived through the application
	of value space constraints. Type inference rules can be used to infer
	transient value space constraints that hold for limited scopes of
	a program. The type system of the \lc-calculus is proved to be sound.
	The \lc-calculus was fully implemented in Java and C\#. The presented
	approach was successfully validated to subsume XML Schema Definition
	type construction and to facilitate the integration of XSD data types
	with the C\# programming language.},
  acmid = {2072242},
  doi = {http://doi.acm.org/10.1145/2072221.2072242},
  file = {Static typing with value space-based subtyping:.\\Files\\PaarG11.pdf:PDF},
  isbn = {978-1-4503-0878-6},
  location = {Cape Town, South Africa},
  url = {http://doi.acm.org/10.1145/2072221.2072242}
}

